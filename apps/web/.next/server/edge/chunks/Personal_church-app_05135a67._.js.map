{"version":3,"sources":["turbopack:///[project]/Personal/church-app/node_modules/@supabase/node-fetch/browser.js","turbopack:///[project]/Personal/church-app/apps/web/edge-wrapper.js"],"sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function() {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') { return self; }\n    if (typeof window !== 'undefined') { return window; }\n    if (typeof global !== 'undefined') { return global; }\n    throw new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nexport const fetch = globalObject.fetch;\n\nexport default globalObject.fetch.bind(globalObject);\n\nexport const Headers = globalObject.Headers;\nexport const Request = globalObject.Request;\nexport const Response = globalObject.Response;\n","self._ENTRIES ||= {};\nconst modProm = import('MODULE');\nmodProm.catch(() => {});\nself._ENTRIES[\"middleware_middleware\"] = new Proxy(modProm, {\n    get(modProm, name) {\n        if (name === \"then\") {\n            return (res, rej) => modProm.then(res, rej);\n        }\n        let result = (...args) => modProm.then((mod) => (0, mod[name])(...args));\n        result.then = (res, rej) => modProm.then((mod) => mod[name]).then(res, rej);\n        return result;\n    },\n});\n"],"names":[],"mappings":"gNAaA,IAAI,EANoB,AAApB,aAAiC,AAMlB,AANX,OAAO,KAA+B,KAEL,EAAA,CAAA,CAMlC,IAAM,EAAQ,EAAa,KAAK,GAExB,EAAa,KAAK,CAAC,IAAI,CAAC,GAE1B,EAAU,EAAa,OAAO,CAC9B,EAAU,EAAa,OAAO,CAC9B,EAAW,EAAa,QAAQ,kBCrB7C,KAAK,QAAQ,GAAK,CAAC,EACnB,IAAM,EAAA,QAAA,OAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,CAAA,QACN,EAAQ,KAAK,CAAC,KAAO,GACrB,KAAK,QAAQ,CAAC,qBAAwB,CAAG,IAAI,MAAM,EAAS,CACxD,IAAI,CAAO,CAAE,CAAI,EACb,GAAa,QAAQ,CAAjB,EACA,MAAO,CAAC,EAAK,IAAQ,EAAQ,IAAI,CAAC,EAAK,GAE3C,IAAI,EAAS,CAAC,GAAG,IAAS,EAAQ,IAAI,CAAE,AAAD,GAAS,CAAC,EAAG,CAAG,CAAC,EAAA,AAAK,KAAK,IAElE,OADA,EAAO,IAAI,CAAG,CAAC,EAAK,IAAQ,EAAQ,IAAI,CAAC,AAAC,GAAQ,CAAG,CAAC,EAAK,EAAE,IAAI,CAAC,EAAK,GAChE,CACX,CACJ","ignoreList":[0]}